import os
import random

def calculate_score(num_correct, num_questions):
    score = (num_correct / num_questions) * 100
    print(f"You got {num_correct} out of {num_questions} questions right.")
    print(f"Your score is {score:.2f}%.")
    return score

def clear_terminal():
    os.system('cls' if os.name == 'nt' else 'clear')

def get_user_details():
    name = input("Please enter your name: ")
    return name

def display_welcome_message(name):
    print(f"\nWelcome, {name}! Let's start the quiz.\n")

def display_question(question_data, question_number):
    question, options, _, hint = question_data
    print(f"(Q{question_number}). {question}")
    option_labels = ['A', 'B', 'C', 'D']
    for idx, option in enumerate(options):
        print(f"{option_labels[idx]}. {option}")
    return hint

def get_user_answer():
    answer = input("Enter your answer (A, B, C, D) or type 'hint' for a hint: ").upper()
    while answer not in ["A", "B", "C", "D", "HINT"]:
        print("Invalid input. Please enter A, B, C, D, or type 'hint'.")
        answer = input("Enter your answer (A, B, C, D) or type 'hint' for a hint: ").upper()
    return answer

def check_answer(question_data, user_answer):
    _, options, correct_answer, _ = question_data
    option_labels = ['A', 'B', 'C', 'D']
    return option_labels.index(user_answer) == correct_answer - 1

def display_result(name, score):
    print(f"\n{name}, your score is {score:.2f}%")
    if score >= PASS_MARK:
        print("Congratulations, you passed!")
    else:
        print("Sorry, you failed. Better luck next time!")

PASS_MARK = 50  # Pass mark is set to 50%

def play_quiz(name):
    questions = [
        ("What is the output of the following code? print(2 ** 3)", ["6", "8", "9", "12"], 2, "It's 2 raised to the power of 3."),
        ("Which of the following is a mutable data type in Python?", ["Tuple", "String", "List", "Integer"], 3, "Mutable means it can be changed."),
        ("What is the correct file extension for Python files?", [".pyth", ".pt", ".py", ".pyt"], 3, "It's a two-letter extension."),
        ("Which keyword is used to define a function in Python?", ["func", "def", "function", "define"], 2, "It's a three-letter keyword."),
        ("What will be the output of the following code? print(type([]))", ["<class 'list'>", "<class 'tuple'>", "<class 'dict'>", "<class 'set'>"], 1, "An empty list is defined by []."),
        ("Which of the following is used to define a block of code in Python?", ["Brackets", "Indentation", "Parentheses", "Quotes"], 2, "Python relies on whitespace."),
        ("What is the output of the following code? print(10 // 3)", ["3.33", "3", "4", "3.0"], 2, "It's integer division."),
        ("Which of the following functions can help us find the version of Python that we are currently working on?", ["sys.version()", "sys.version", "sys.version_info", "sys.version_number"], 2, "It's an attribute of the sys module."),
        ("What does the len() function do?", ["Returns the length of an object", "Returns the type of an object", "Returns the value of an object", "Returns the id of an object"], 1, "It measures size."),
        ("Which of the following is the correct syntax to create a dictionary in Python?", ["d = {}", "d = []", "d = ()", "d = <>"], 1, "Dictionaries use curly braces."),
        ("What is the output of the following code? print('Hello' + 'World')", ["Hello World", "HelloWorld", "Hello+World", "Error"], 2, "It's string concatenation."),
        ("Which of the following is not a valid variable name in Python?", ["my_var", "my-var", "myVar", "_myvar"], 2, "Hyphens are not allowed."),
        ("What is the output of the following code? print(3 * '7')", ["21", "777", "37", "Error"], 2, "It's string repetition."),
        ("Which of the following is used to handle exceptions in Python?", ["try", "except", "finally", "All of the above"], 4, "All these keywords are used."),
        ("What is the output of the following code? print(bool(0))", ["True", "False", "0", "None"], 2, "Zero is considered False.")
        ("Which of the following statements is used to create a loop that runs as long as a condition is true?", ["for", "while", "loop", "repeat"], 2, "While statement is used to create such loop.")
        ("How do you insert comments in Python code?", ["# This is a comment", "// This is a comment", "<!-- This is a comment", "/* This is a comment */"], 1, "# is for inserting comments")
      ]


